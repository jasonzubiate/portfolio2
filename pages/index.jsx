import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import ProjectCard from "@/components/common/ProjectCard";
import jasonimg from "@/public/assets/img/me.png";
import fsPromises from "fs/promises";
import path from "path";
import { useEffect, useRef } from "react";
import { gsap } from "gsap";

const inter = Inter({ subsets: ["latin"] });

// retrieves all of my previous work from work.json
export const getStaticProps = async () => {
	const filePath = path.join(process.cwd(), "json/work.json");
	const jsonData = await fsPromises.readFile(filePath);
	const objectData = JSON.parse(jsonData);
	return {
		props: objectData,
	};
};

export default function Home(objectData) {
	const { work, freelance } = objectData;

	const h1Ref1 = useRef();
	const h1Ref2 = useRef();
	const imgRef = useRef();
	const tagRef = useRef();
	const lineRef1 = useRef();
	const lineRef2 = useRef();
	const sRef1 = useRef();
	const sRef2 = useRef();
	const sRef3 = useRef();

	useEffect(() => {
		let tl = gsap.timeline({
			defaults: { ease: "power1.out", duration: 3 },
		});
		tl.to(imgRef.current, {
			scale: 1.05,
		})
			.to(
				h1Ref1.current,
				{
					opacity: 1,
					duration: 1.5,
					y: 0,
					clipPath: "polygon(0% 100%, 100% 100%, 100% 0%, 0% 0%)",
				},
				"-=3"
			)
			.to(
				h1Ref2.current,
				{
					opacity: 1,
					duration: 1.2,
					y: 0,
					clipPath: "polygon(0% 100%, 100% 100%, 100% 0%, 0% 0%)",
				},
				"-=3"
			)
			.to(
				tagRef.current,
				{
					opacity: 1,
					duration: 1.2,
					y: 0,
					clipPath: "polygon(0% 100%, 100% 100%, 100% 0%, 0% 0%)",
				},
				"-=2.6"
			)
			.to(
				[lineRef1.current, lineRef2.current],
				{
					stagger: 0.2,
					duration: 1.3,
					opacity: 1,
					clipPath: "polygon(0% 100%, 100% 100%, 100% 0%, 0% 0%)",
					y: 0,
				},
				"-=2.4"
			)
			.to(
				[sRef1.current, sRef2.current, sRef3.current],
				{
					stagger: 0.2,
					duration: 1.5,
					opacity: 1,
					clipPath: "polygon(0% 100%, 100% 100%, 100% 0%, 0% 0%)",
					y: 0,
				},
				"-=2.5"
			);
	}, []);

	return (
		<>
			<Head>
				<title>jasonzubiate</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className={styles.main}>
				<div className={styles.hero}>
					<div className={styles.hero_content}>
						<div className={styles.title}>
							<h1 className={`${styles.h1} ${styles.hide}`} ref={h1Ref1}>
								Jason
							</h1>
							<h1 className={`${styles.h1} ${styles.hide}`} ref={h1Ref2}>
								Zubiate
							</h1>
						</div>
						<h2 className={`${styles.catchline} ${styles.hide}`} ref={tagRef}>
							0 to 1 designer - of software, interfaces, and experiences
						</h2>
						<div className={styles.statuses}>
							<div className={`${styles.status} ${styles.hide}`} ref={sRef1}>
								<label className={styles.status_title}>Currently</label>
								<label className={styles.status_body}>
									Preparing for gradute school in fall 2023
								</label>
							</div>
							<div
								className={`${styles.vl} ${styles.hide}`}
								ref={lineRef1}
							></div>
							<div className={`${styles.status} ${styles.hide}`} ref={sRef2}>
								<label className={styles.status_title}>Thinking About</label>
								<label className={styles.status_body}>
									Latest design trends, new techniques in dance music production
								</label>
							</div>
							<div
								className={`${styles.vl} ${styles.hide}`}
								ref={lineRef2}
							></div>
							<div className={`${styles.status} ${styles.hide}`} ref={sRef3}>
								<label className={styles.status_title}>Previously</label>
								<label className={styles.status_body}>
									UX Lead @{" "}
									<span className={styles.bold}>
										<a className="link" href="https://www.nutripair.co/">
											Nutripair
										</a>
									</span>
								</label>
							</div>
						</div>
					</div>
					<div className={styles.hero_image}>
						<Image
							className={styles.img}
							src={jasonimg}
							alt={"Jason Zubiate"}
							priority
							ref={imgRef}
						/>
					</div>
				</div>
				<div className={styles.section}>
					<h2 className={styles.h2}>My Work</h2>
					<div className={styles.projects}>
						{work.map((project) => {
							return (
								<div key={project.id}>
									<hr className={styles.hr} />
									<ProjectCard project={project} />
								</div>
							);
						})}
					</div>
				</div>
				{/* <div className={styles.section}>
          <h2 className={styles.h2}>Freelancing</h2>
          {freelance.map((project) => {
            return (
              <SmallCard project={project}/>
            )
          })}
        </div> */}
			</main>
		</>
	);
}
